<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>个人博客</title>
  
  
  <link href="http://weizhoujie.github.io/atom.xml" rel="self"/>
  
  <link href="http://weizhoujie.github.io/"/>
  <updated>2022-02-17T06:28:19.993Z</updated>
  <id>http://weizhoujie.github.io/</id>
  
  <author>
    <name>魏周杰</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决kubernetes删除命名空间一直Terminating</title>
    <link href="http://weizhoujie.github.io/2022/02/17/k8s%E5%88%A0%E9%99%A4%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E4%B8%80%E7%9B%B4Terminating%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://weizhoujie.github.io/2022/02/17/k8s%E5%88%A0%E9%99%A4%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E4%B8%80%E7%9B%B4Terminating%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2022-02-17T06:16:38.000Z</published>
    <updated>2022-02-17T06:28:19.993Z</updated>
    
    
    <summary type="html">&lt;p&gt;当我们使用kubectl delete ns xxx命令删除命名空间后发现删不掉，显示是Terminating状态&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://gitee.com/weizhoujie/images/raw/master/20220217140715.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;再次尝试kubectl delete ns xxx删除&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://gitee.com/weizhoujie/images/raw/master/20220217140936.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;提示删除操作未能完成，说系统会在确定没用资源后将会被自动删除&lt;/p&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h2&gt;&lt;h3 id=&quot;1-现将要删除的namespace的描述信息导出到文件&quot;&gt;&lt;a href=&quot;#1-现将要删除的namespace的描述信息导出到文件&quot; class=&quot;headerlink&quot; title=&quot;1.现将要删除的namespace的描述信息导出到文件&quot;&gt;&lt;/a&gt;1.现将要删除的namespace的描述信息导出到文件&lt;/h3&gt;</summary>
    
    
    
    <category term="运维" scheme="http://weizhoujie.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="kubernetes" scheme="http://weizhoujie.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>k8s dashboard超详细部署教程</title>
    <link href="http://weizhoujie.github.io/2021/06/18/k8s-dashboard/"/>
    <id>http://weizhoujie.github.io/2021/06/18/k8s-dashboard/</id>
    <published>2021-06-18T07:15:05.000Z</published>
    <updated>2021-06-18T08:53:04.451Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;1-简介&quot;&gt;&lt;a href=&quot;#1-简介&quot; class=&quot;headerlink&quot; title=&quot;1. 简介&quot;&gt;&lt;/a&gt;1. 简介&lt;/h2&gt;&lt;p&gt;在 Kubernetes 社区中，有一个很受欢迎的 Dashboard 项目，它可以给用户提供一个可视化的 Web 界面来查看当前集群的各种信息。用户可以用 Kubernetes Dashboard 部署容器化的应用、监控应用的状态、执行故障排查任务以及管理 Kubernetes 各种资源。&lt;/p&gt;
&lt;p&gt;官方参考文档：&lt;br&gt;&lt;a href=&quot;https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/&quot;&gt;https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;github项目地址：&lt;br&gt;&lt;a href=&quot;https://github.com/kubernetes/dashboard&quot;&gt;https://github.com/kubernetes/dashboard&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当前部署dashboard版本：v2.0.1，注意检查dashboard版本与kubernetes版本兼容性：&lt;br&gt;&lt;a href=&quot;https://github.com/kubernetes/dashboard/releases&quot;&gt;https://github.com/kubernetes/dashboard/releases&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="运维" scheme="http://weizhoujie.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="kubernetes" scheme="http://weizhoujie.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>k8s环境搭建</title>
    <link href="http://weizhoujie.github.io/2021/03/13/k8s%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://weizhoujie.github.io/2021/03/13/k8s%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-03-13T07:37:25.000Z</published>
    <updated>2021-05-25T07:33:13.569Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;1-操作系统&quot;&gt;&lt;a href=&quot;#1-操作系统&quot; class=&quot;headerlink&quot; title=&quot;1. 操作系统&quot;&gt;&lt;/a&gt;1. 操作系统&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;操作系统：centos7.6&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href=&quot;http://mirrors.sohu.com/centos/7.6.1810/isos/x86_64/CentOS-7-x86_64-DVD-1810.iso&quot;&gt;http://mirrors.sohu.com/centos/7.6.1810/isos/x86_64/CentOS-7-x86_64-DVD-1810.iso&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;系统安装盘制作&lt;/p&gt;
&lt;p&gt;采用UltraISO 制作系统盘，下载地址 &lt;a href=&quot;https://www.onlinedown.net/soft/614.htm&quot;&gt;https://www.onlinedown.net/soft/614.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;制作以及安装流程：&lt;a href=&quot;https://www.cnblogs.com/zhuimengdeyuanyuan/p/13440561.html&quot;&gt;https://www.cnblogs.com/zhuimengdeyuanyuan/p/13440561.html&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="运维" scheme="http://weizhoujie.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="kubernetes" scheme="http://weizhoujie.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>nginx自动补全“/”重定向后端口丢失</title>
    <link href="http://weizhoujie.github.io/2021/03/12/nginx/"/>
    <id>http://weizhoujie.github.io/2021/03/12/nginx/</id>
    <published>2021-03-12T08:16:38.000Z</published>
    <updated>2021-03-12T09:12:01.887Z</updated>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;当访问的uri最后不带斜杠时，例如 &lt;a href=&quot;http://localhost/product&quot;&gt;http://localhost/product&lt;/a&gt; ，会先查找 product 文件，存在就返回；若存在 product 文件夹，会在末尾加上一个斜杠并产生 301 跳转&lt;/li&gt;
&lt;li&gt;当访问的uri最后带斜杠时，例如 &lt;a href=&quot;http://localhost/product/%EF%BC%8C%E6%9F%A5%E6%89%BE&quot;&gt;http://localhost/product/，查找&lt;/a&gt; product 下的 index 页面，存在就返回；不存在且未开启自动索引目录选项（autoindex on）则报 403 错误&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在第一种情况，访问带目录的url时，如果末尾不加斜杠(“/“)，nginx默认会加上斜杠，发生一次301跳转，但这个默认行为在nginx前端有LB负载均衡器、且LB监听的端口与nginx server监听的端口不同时会导致访问出错。&lt;/p&gt;</summary>
    
    
    
    <category term="运维" scheme="http://weizhoujie.github.io/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="nginx" scheme="http://weizhoujie.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>k8s的容器监测探针</title>
    <link href="http://weizhoujie.github.io/2021/02/09/k8s/"/>
    <id>http://weizhoujie.github.io/2021/02/09/k8s/</id>
    <published>2021-02-09T08:59:24.000Z</published>
    <updated>2021-02-09T09:37:52.013Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;k8s的容器监测探针&quot;&gt;&lt;a href=&quot;#k8s的容器监测探针&quot; class=&quot;headerlink&quot; title=&quot;k8s的容器监测探针&quot;&gt;&lt;/a&gt;k8s的容器监测探针&lt;/h1&gt;&lt;p&gt;大部分的应用程序我们在部署的时候都会适当的添加监控，对于运行载体容器则更应该如此。kubernetes提供了 liveness probes来检查我们的应用程序。它是由节点上的kubelet定期执行的。  &lt;/p&gt;
&lt;p&gt;首先说一下Pod的整个生命阶段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pending&lt;/strong&gt;：表示集群系统正在创建Pod，但是Pod中的container还没有全部被创建，这其中也包含集群为container创建网络，或者下载镜像的时间  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Running&lt;/strong&gt;：表示pod已经运行在一个节点商量，并且所有的container都已经被创建。但是并不代表所有的container都运行，它仅仅代表至少有一个container是处于运行的状态或者进程出于启动中或者重启中  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Succeeded&lt;/strong&gt;：所有Pod中的container都已经终止成功，并且没有处于重启的container</summary>
    
    
    
    <category term="云原生" scheme="http://weizhoujie.github.io/categories/%E4%BA%91%E5%8E%9F%E7%94%9F/"/>
    
    
    <category term="kubernetes" scheme="http://weizhoujie.github.io/tags/kubernetes/"/>
    
  </entry>
  
</feed>
